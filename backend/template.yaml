AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: FormBridge backend - SAM template (explicit Serverless::Api, runtime python3.11)

Globals:
  Function:
    Timeout: 30
    Runtime: python3.11
    MemorySize: 256

Parameters:
  DDBTableName:
    Type: String
    Default: contact-form-submissions

Resources:

  # Explicit API so we can set StageName and Cors cleanly
  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        # Restrict to your exact Netlify origin. For dev/testing use "'*'".
        AllowOrigin: "'https://formbridgeod.netlify.app'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowMethods: "'POST,OPTIONS'"

  ContactTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DDBTableName
      AttributeDefinitions:
        - AttributeName: submissionId
          AttributeType: S
      KeySchema:
        - AttributeName: submissionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ContactFormFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: contactFormProcessor
      Handler: contact_form_lambda.lambda_handler
      CodeUri: .
      Environment:
        Variables:
          DDB_TABLE: !Ref DDBTableName
          SES_RECIPIENT: "omdeshpande123456789@gmail.com"
          SES_ALLOWED_SENDERS: "sahil.bobhate@mitwpu.edu.in,om.deshpande@mitwpu.edu.in,omdeshpande0901@gmail.com,aayush.das@mitwpu.edu.in"
          APP_REGION: !Ref "AWS::Region"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DDBTableName}
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource: "*"   # okay for demo; scope down in prod
      Events:
        ContactApi:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessRestApi
            Path: /submit
            Method: post

Outputs:
  ApiUrl:
    Description: "API Gateway invoke URL for the submit endpoint"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/submit"
